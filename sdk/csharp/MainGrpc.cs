// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: main.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Streams {
  public static partial class Example
  {
    static readonly string __ServiceName = "streams.Example";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Streams.SimpleMsg1> __Marshaller_streams_SimpleMsg1 = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Streams.SimpleMsg1.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Streams.SimpleMsg2> __Marshaller_streams_SimpleMsg2 = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Streams.SimpleMsg2.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Streams.SimpleMsg3> __Marshaller_streams_SimpleMsg3 = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Streams.SimpleMsg3.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg1, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GetStream1 = new grpc::Method<global::Streams.SimpleMsg1, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "GetStream1",
        __Marshaller_streams_SimpleMsg1,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg1> __Method_ReturnStream1 = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg1>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReturnStream1",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_streams_SimpleMsg1);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg1, global::Streams.SimpleMsg1> __Method_BothStream1 = new grpc::Method<global::Streams.SimpleMsg1, global::Streams.SimpleMsg1>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BothStream1",
        __Marshaller_streams_SimpleMsg1,
        __Marshaller_streams_SimpleMsg1);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg2, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GetStream2 = new grpc::Method<global::Streams.SimpleMsg2, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "GetStream2",
        __Marshaller_streams_SimpleMsg2,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg2> __Method_ReturnStream2 = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg2>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReturnStream2",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_streams_SimpleMsg2);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg2, global::Streams.SimpleMsg2> __Method_BothStream2 = new grpc::Method<global::Streams.SimpleMsg2, global::Streams.SimpleMsg2>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BothStream2",
        __Marshaller_streams_SimpleMsg2,
        __Marshaller_streams_SimpleMsg2);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg3, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GetStream3 = new grpc::Method<global::Streams.SimpleMsg3, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "GetStream3",
        __Marshaller_streams_SimpleMsg3,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg3> __Method_ReturnStream3 = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg3>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReturnStream3",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_streams_SimpleMsg3);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Streams.SimpleMsg3, global::Streams.SimpleMsg3> __Method_BothStream3 = new grpc::Method<global::Streams.SimpleMsg3, global::Streams.SimpleMsg3>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BothStream3",
        __Marshaller_streams_SimpleMsg3,
        __Marshaller_streams_SimpleMsg3);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Streams.MainReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Example</summary>
    [grpc::BindServiceMethod(typeof(Example), "BindService")]
    public abstract partial class ExampleBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> GetStream1(grpc::IAsyncStreamReader<global::Streams.SimpleMsg1> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ReturnStream1(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::Streams.SimpleMsg1> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BothStream1(grpc::IAsyncStreamReader<global::Streams.SimpleMsg1> requestStream, grpc::IServerStreamWriter<global::Streams.SimpleMsg1> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> GetStream2(grpc::IAsyncStreamReader<global::Streams.SimpleMsg2> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ReturnStream2(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::Streams.SimpleMsg2> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BothStream2(grpc::IAsyncStreamReader<global::Streams.SimpleMsg2> requestStream, grpc::IServerStreamWriter<global::Streams.SimpleMsg2> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> GetStream3(grpc::IAsyncStreamReader<global::Streams.SimpleMsg3> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ReturnStream3(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::Streams.SimpleMsg3> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BothStream3(grpc::IAsyncStreamReader<global::Streams.SimpleMsg3> requestStream, grpc::IServerStreamWriter<global::Streams.SimpleMsg3> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Example</summary>
    public partial class ExampleClient : grpc::ClientBase<ExampleClient>
    {
      /// <summary>Creates a new client for Example</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExampleClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Example that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExampleClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExampleClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExampleClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg1, global::Google.Protobuf.WellKnownTypes.Empty> GetStream1(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStream1(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg1, global::Google.Protobuf.WellKnownTypes.Empty> GetStream1(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_GetStream1, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg1> ReturnStream1(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReturnStream1(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg1> ReturnStream1(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReturnStream1, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg1, global::Streams.SimpleMsg1> BothStream1(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BothStream1(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg1, global::Streams.SimpleMsg1> BothStream1(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BothStream1, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg2, global::Google.Protobuf.WellKnownTypes.Empty> GetStream2(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStream2(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg2, global::Google.Protobuf.WellKnownTypes.Empty> GetStream2(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_GetStream2, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg2> ReturnStream2(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReturnStream2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg2> ReturnStream2(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReturnStream2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg2, global::Streams.SimpleMsg2> BothStream2(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BothStream2(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg2, global::Streams.SimpleMsg2> BothStream2(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BothStream2, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg3, global::Google.Protobuf.WellKnownTypes.Empty> GetStream3(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStream3(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Streams.SimpleMsg3, global::Google.Protobuf.WellKnownTypes.Empty> GetStream3(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_GetStream3, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg3> ReturnStream3(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReturnStream3(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Streams.SimpleMsg3> ReturnStream3(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReturnStream3, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg3, global::Streams.SimpleMsg3> BothStream3(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BothStream3(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Streams.SimpleMsg3, global::Streams.SimpleMsg3> BothStream3(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BothStream3, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ExampleClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ExampleClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ExampleBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetStream1, serviceImpl.GetStream1)
          .AddMethod(__Method_ReturnStream1, serviceImpl.ReturnStream1)
          .AddMethod(__Method_BothStream1, serviceImpl.BothStream1)
          .AddMethod(__Method_GetStream2, serviceImpl.GetStream2)
          .AddMethod(__Method_ReturnStream2, serviceImpl.ReturnStream2)
          .AddMethod(__Method_BothStream2, serviceImpl.BothStream2)
          .AddMethod(__Method_GetStream3, serviceImpl.GetStream3)
          .AddMethod(__Method_ReturnStream3, serviceImpl.ReturnStream3)
          .AddMethod(__Method_BothStream3, serviceImpl.BothStream3).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ExampleBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetStream1, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Streams.SimpleMsg1, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.GetStream1));
      serviceBinder.AddMethod(__Method_ReturnStream1, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg1>(serviceImpl.ReturnStream1));
      serviceBinder.AddMethod(__Method_BothStream1, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Streams.SimpleMsg1, global::Streams.SimpleMsg1>(serviceImpl.BothStream1));
      serviceBinder.AddMethod(__Method_GetStream2, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Streams.SimpleMsg2, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.GetStream2));
      serviceBinder.AddMethod(__Method_ReturnStream2, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg2>(serviceImpl.ReturnStream2));
      serviceBinder.AddMethod(__Method_BothStream2, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Streams.SimpleMsg2, global::Streams.SimpleMsg2>(serviceImpl.BothStream2));
      serviceBinder.AddMethod(__Method_GetStream3, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Streams.SimpleMsg3, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.GetStream3));
      serviceBinder.AddMethod(__Method_ReturnStream3, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Streams.SimpleMsg3>(serviceImpl.ReturnStream3));
      serviceBinder.AddMethod(__Method_BothStream3, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Streams.SimpleMsg3, global::Streams.SimpleMsg3>(serviceImpl.BothStream3));
    }

  }
}
#endregion
